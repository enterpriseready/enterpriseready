<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Herokus on EnterpriseReady</title>
    <link>https://www.enterpriseready.io/heroku/</link>
    <description>Recent content in Herokus on EnterpriseReady</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 25 Oct 2016 00:00:00 +0000</lastBuildDate><atom:link href="https://www.enterpriseready.io/heroku/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Heroku Teams</title>
      <link>https://www.enterpriseready.io/heroku/teams/</link>
      <pubDate>Tue, 25 Oct 2016 00:00:00 +0000</pubDate>
      
      <guid>https://www.enterpriseready.io/heroku/teams/</guid>
      <description>Team functionality drives collaboration, which is why Heroku introduced Teams for people to build and collaborate on apps together.
User Centric vs. Team Centric? User Centric. Enterprise Ready classifies Team functionality into to camps, User Centric vs. Team Centric. You can read more in depth on this concept but quickly itâ€™s the model for how applications group users to create teams. Applications like Github follow the User Centric approach, everybody on Github has their own user account that gets assigned to organizations.</description>
    </item>
    
  </channel>
</rss>
